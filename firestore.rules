rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      // Assumes an 'isAdmin' flag on the user's document
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isOwner(resource) {
      return request.auth.uid == resource.data.ownerId;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS
    // Users can read/write their own document. Admins can read any.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
      allow create: if isAuthenticated();

      // LINKED ENTITIES
      // Users can manage their own linked entities. Admins can read.
      match /linkedEntities/{entityId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }

    // COLLECTIONS
    // - Read allowed if shared, owned, or admin.
    // - CUD allowed if owned or admin.
    match /collections/{collectionId} {
      allow read: if isAuthenticated() && (resource.data.isShared == true || isOwner(resource) || isAdmin());
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (isOwner(resource) || isAdmin());

      // LABELS (sub-collection of Collections)
      // Inherits permissions from the parent collection.
      match /labels/{labelId} {
         allow read: if isAuthenticated() && (get(resource.parent.parent).data.isShared == true || isOwner(get(resource.parent.parent)) || isAdmin());
         allow create, update, delete: if isAuthenticated() && (isOwner(get(resource.parent.parent)) || isAdmin());
      }
    }

    // PROJECTS
    // - Read allowed if shared, owned, or admin.
    // - CUD allowed if owned or admin.
    match /projects/{projectId} {
      allow read: if isAuthenticated() && (resource.data.isShared == true || isOwner(resource) || isAdmin());
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (isOwner(resource) || isAdmin());

       // PHASES & EVENTS (sub-collections of Projects)
      // Inherit permissions from the parent project.
      match /{subcollection}/{docId} {
         allow read: if isAuthenticated() && (get(resource.parent.parent).data.isShared == true || isOwner(get(resource.parent.parent)) || isAdmin());
         allow create, update, delete: if isAuthenticated() && (isOwner(get(resource.parent.parent)) || isAdmin());
      }
    }
  }
}
