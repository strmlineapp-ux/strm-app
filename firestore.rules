rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Collections
    match /collections/{collectionId} {
      allow read: if request.auth != null && (resource.data.isShared == true || resource.data.ownerId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && (request.resource.data.ownerId == request.auth.uid || isAdmin());
      
      // Labels subcollection
      match /labels/{labelId} {
        allow read: if request.auth != null && (get(/databases/$(database)/documents/collections/$(collectionId)).data.isShared == true || get(/databases/$(database)/documents/collections/$(collectionId)).data.ownerId == request.auth.uid || isAdmin());
        allow write: if request.auth != null && (get(/databases/$(database)/documents/collections/$(collectionId)).data.ownerId == request.auth.uid || isAdmin());
      }
    }

    // Projects
    match /projects/{projectId} {
      allow read: if request.auth != null && (resource.data.isShared == true || resource.data.ownerId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && (request.resource.data.ownerId == request.auth.uid || isAdmin());
    }

    // User data, including linked entities
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId || isAdmin();
    }
  }
}
