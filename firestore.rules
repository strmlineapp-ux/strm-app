rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(docData) {
      return isAuthenticated() && request.auth.uid == docData.ownerId;
    }

    function isAdmin() {
      // Check for a specific role or field in the user's document
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // --- Top-Level Collection Rules ---
    
    // The users collection is a core part of authentication and permissions
    // A user can read their own document, and can create a new document for themselves on first login.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // This rule applies to all other top-level collections (companies, projects, pages, teams, collections, labels, eventTemplates, assets, deliverables)
    match /{collectionName}/{docId} {
      // Admins have full access
      allow read, write: if isAdmin();

      // Owners have full access to their own documents
      allow read, write: if isOwner(resource.data);

      // Anyone can create a new document if they are authenticated
      allow create: if isAuthenticated();

      // Allow any authenticated user to read shared documents
      allow read: if isAuthenticated() && resource.data.isShared == true;
    }
    
    // --- Sub-Collection Rules ---

    // This rule applies to linked entities under a user's document
    match /users/{userId}/linkedEntities/{entityId} {
        allow read, write: if request.auth.uid == userId;
    }
    
    // This rule applies to collections' sub-collections (e.g., linkedAssets)
    match /collections/{collectionId}/{subCollectionName}/{docId} {
      // Admins and collection owners have full access to sub-collections
      allow read, write: if isAdmin() || isOwner(get(/databases/$(database)/documents/collections/$(collectionId)).data);
    }
    
    // This rule applies to projects' sub-collections (phases, events, tasks, etc.)
    match /projects/{projectId}/{subCollectionName}/{docId} {
      // Admins have full access
      allow read, write: if isAdmin();

      // Anyone who is a member of the project has full access
      function isProjectMember() {
        return get(/databases/$(database)/documents/projects/$(projectId)).data.memberIds.hasAny([request.auth.uid]);
      }
      allow read, write: if isProjectMember();
    }
  }
}