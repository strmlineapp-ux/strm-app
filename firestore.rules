rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(resource) {
      return request.auth.uid == resource.data.ownerId;
    }

    // In a real app, you would check for an admin custom claim.
    // function isAdmin() {
    //   return request.auth.token.admin == true;
    // }

    // For now, we'll check a field on the user document.
     function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Collections and their labels
    match /collections/{collectionId} {
      allow read: if isAuthenticated() && (isOwner(resource) || resource.data.isShared == true || isAdmin());
      allow write: if isAuthenticated() && (isOwner(resource) || isAdmin());

      // Labels sub-collection
      match /labels/{labelId} {
        allow read: if isAuthenticated() && (get(parent).data.isShared == true || isOwner(get(parent)) || isAdmin());
        allow write: if isAuthenticated() && (isOwner(get(parent)) || isAdmin());
      }
    }

    // Projects and their sub-collections
    match /projects/{projectId} {
      allow read: if isAuthenticated() && (isOwner(resource) || resource.data.isShared == true || isAdmin());
      allow write: if isAuthenticated() && (isOwner(resource) || isAdmin());

      // Phases sub-collection
      match /phases/{phaseId} {
         allow read: if isAuthenticated() && (isOwner(get(parent)) || get(parent).data.isShared == true || isAdmin());
         allow write: if isAuthenticated() && (isOwner(get(parent)) || isAdmin());
      }
      
      // Events sub-collection
      match /events/{eventId} {
         allow read: if isAuthenticated() && (isOwner(get(parent)) || get(parent).data.isShared == true || isAdmin());
         allow write: if isAuthenticated() && (isOwner(get(parent)) || isAdmin());
      }
    }
    
    // User documents and their linked entities
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
      
      // LinkedEntities sub-collection
      match /linkedEntities/{entityId} {
      	allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
  }
}
